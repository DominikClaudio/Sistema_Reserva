package proyectoSistema.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import jakarta.servlet.http.HttpServletRequest;
import proyectoSistema.model.Usuario;
import proyectoSistema.repository.UsuarioRepository;

@Controller
public class UsuarioController {

	@Autowired
    private UsuarioRepository usuarioRepository;

    @Autowired
    private BCryptPasswordEncoder passwordEncoder;

    // Mostrar formulario de registro
    @GetMapping("/registro")
    public String mostrarRegistro(HttpServletRequest request, Model model) {
        model.addAttribute("currentPath", request.getRequestURI());
        return "login/registroUsuario";
    }

    // Procesar formulario de registro
    @PostMapping("/registro")
    public String procesarRegistro(@RequestParam("nombre") String nombre,
                                   @RequestParam("correo") String correo,
                                   @RequestParam("password") String password,
                                   Model model) {

        // Verifica si ya existe un usuario con ese correo
        if (usuarioRepository.findByCorreo(correo).isPresent()) {
            model.addAttribute("error", "El correo ya est√° registrado.");
            return "registroUsuario";
        }

        // Crear usuario nuevo
        Usuario nuevo = new Usuario();
        nuevo.setNombre(nombre);
        nuevo.setCorreo(correo);
        nuevo.setContrasena(passwordEncoder.encode(password));
        nuevo.setRol("CLIENTE");

        usuarioRepository.save(nuevo);

        // Redirige al login
        return "redirect:/login/login";
    }
}
